%YAML 1.2
%TAG ! tag:yaml-macros:macros:
---
!extend
_base: HTML.yaml
name: Svelte
file_extensions:
  - svlt
  - svelte
scope: text.html.svelte

contexts: !merge
  main: !prepend
    - include: control

  tag-attributes: !prepend
    - include: push-interpolation
    - include: svelte-attributes-string
    - include: svelte-attributes-variable
    - include: svelte-attributes-storage

  entities: !prepend
    - include: push-interpolation

  tag-id-attribute-value: !prepend
    - include: set-interpolation

  tag-class-attribute-value: !prepend
    - include: set-interpolation

  tag-style-attribute-value: !prepend
    - include: set-interpolation

  tag-event-attribute-value: !prepend
    - include: set-interpolation

  tag-generic-attribute-value: !prepend
    - include: set-interpolation

  svelte-attributes-string:
    - match: !word (on|bind|class)(:)([A-z0-9_-]+)
      scope: entity.other.attribute-name.svelte
      captures:
        1: support.function.svelte
        2: punctuation.separator.svelte
        3: string.unquoted.svelte
      push: tag-generic-attribute-equals
      with_prototype:
        - include: svelte-attribute-modifiers

  svelte-attributes-variable:
    - match: !word (in|out|transition|animate|use)(:)([A-z0-9_-]+)
      scope: entity.other.attribute-name.svelte
      captures:
        1: support.function.svelte
        2: punctuation.separator.svelte
        3: variable.other.readwrite.svelte
      push: tag-generic-attribute-equals
      with_prototype:
        - include: svelte-attribute-modifiers

  svelte-attributes-storage:
    - match: !word (let)(:)([A-z0-9_-]+)
      scope: entity.other.attribute-name.svelte
      captures:
        1: storage.type.svelte
        2: punctuation.separator.svelte
        3: variable.other.readwrite.svelte
      push: tag-generic-attribute-equals

  svelte-attribute-modifiers:
    - match: (\|)(([A-z0-9_-]+))?
      scope: entity.other.attribute-name.svelte
      captures:
        1: punctuation.separator.svelte
        2: support.constant.svelte

  control:
    - match: \{@(html|debug)
      scope: punctuation.section.embedded.begin.svelte
      push: embed-scope

    - match: (\{)(#each)\b
      captures:
        1: punctuation.section.embedded.begin.svelte
        2: keyword.control.loop.svelte
      push: embed-scope
      with_prototype:
        - match: !word as
          scope: keyword.control.loop.svelte
        - match: (,)\s*(\b[_$\p{L}\p{Nl}][_$\p{L}\p{Nl}\p{Mn}\p{Mc}\p{Nd}\p{Pc}\x{200C}\x{200D}]*\b)?
          captures:
            1: keyword.operator.comma.svelte
            2: variable.other.readwrite.svelte
        - match: \s*(\b[_$\p{L}\p{Nl}][_$\p{L}\p{Nl}\p{Mn}\p{Mc}\p{Nd}\p{Pc}\x{200C}\x{200D}]*\b)(?:\s+(\()(\b[_$\p{L}\p{Nl}][_$\p{L}\p{Nl}\p{Mn}\p{Mc}\p{Nd}\p{Pc}\x{200C}\x{200D}]*\b)(\)))
          captures:
            1: variable.other.readwrite.svelte
            2: punctuation.section.group.begin.svelte
            3: variable.other.readwrite.svelte
            4: punctuation.section.group.begin.svelte

    - match: (\{)(\/each)\b
      captures:
        1: punctuation.section.embedded.begin.svelte
        2: keyword.control.loop.svelte
      push: embed-scope

    - match: (\{)(#if|\/if|:else(?:\s+if)?)\b
      captures:
        1: punctuation.section.embedded.begin.svelte
        2: keyword.control.conditional.svelte
      push: embed-scope

    - match: (\{)(#await)\b
      captures:
        1: punctuation.section.embedded.begin.svelte
        2: keyword.control.await.svelte
      push: embed-scope
      with_prototype:
        - match: !word then
          scope: keyword.control.await.svelte

    - match: (\{)(\/await|:then|:catch)\b
      captures:
        1: punctuation.section.embedded.begin.svelte
        2: keyword.control.await.svelte
      scope: keyword.control.await.svelte
      push: embed-scope

  embed-scope:
    - meta_scope: meta.embedded.block.svelte
    - meta_content_scope: source.js.svelte
    - match: \}
      scope: punctuation.section.embedded.end.svelte
      pop: true
    - include: Packages/JavaScript/JavaScript.sublime-syntax

  set-interpolation:
    - match: \{
      scope: punctuation.section.embedded.begin.svelte
      set: embed-scope
      with_prototype:
        - match: \$\$(restProps|props)
          scope: variable.language.dollar.js

  push-interpolation:
    - match: \{
      scope: punctuation.section.embedded.begin.svelte
      push: embed-scope
      with_prototype:
        - match: \$\$(restProps|props)
          scope: variable.language.dollar.js

  style-common: !prepend
    - include: style-lang-attribute

  style-lang-attribute:
    - match: !word type
      scope: meta.attribute-with-value.html entity.other.attribute-name.html
      set:
        - meta_content_scope: meta.tag.style.begin.html meta.attribute-with-value.html
        - match: =
          scope: punctuation.separator.key-value.html
          set:
            - meta_content_scope: meta.tag.style.begin.html meta.attribute-with-value.html
            - include: style-lang-decider
        - match: (?=\S)
          set: style-css

  style-lang-decider:
    - !style_language [ scss, source.scss ]
    - !style_language [ sass, source.sass ]
    - !style_language [ less, source.css.less ]
    - !style_language [ stylus, source.stylus ]
    - !style_language [ postcss, source.postcss ]
    - match: (?=\S)
      set:
        - style-css
        - tag-generic-attribute-meta
        - tag-generic-attribute-value

  script-common: !prepend
    - include: script-lang-attribute

  script-lang-attribute:
    - match: !word type
      scope: meta.attribute-with-value.html entity.other.attribute-name.html
      set:
        - meta_content_scope: meta.tag.script.begin.html meta.attribute-with-value.html
        - match: =
          scope: punctuation.separator.key-value.html
          set:
            - meta_content_scope: meta.tag.script.begin.html meta.attribute-with-value.html
            - include: script-lang-decider
        - match: (?=\S)
          set: script-javascript

  script-lang-decider:
    - !script_language [ (?:ts|typescript), source.ts ]
    - !script_language [ coffeescript, source.coffee ]
    - !script_language [ livescript, source.livescript ]
    - !script_language [ babel, source.js, "Packages/Babel/JavaScript (Babel).sublime-syntax" ]
    - match: (?=\S)
      set:
        - script-javascript
        - tag-generic-attribute-meta
        - tag-generic-attribute-value
